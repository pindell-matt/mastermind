#!/usr/bin/env ruby
require 'time'
require 'pry'
require_relative 'response'
require_relative 'evaluation'

class Mastermind
  include Response
  include Evaluation

  attr_reader :start_time, :sequence, :guess_count

  COLORS = {'R' => 'R'.red,
            'G' => 'G'.green,
            'B' => 'B'.blue,
            'Y' => 'Y'.yellow
           }

  def initialize
    welcome
    loop do
      game_start(user_input)
    end
  end

  def user_input
    print "> "
    input = gets.chomp.upcase
    abort(quit) if input[0] == 'Q'
    input
  end

  def game_start(input)
    @sequence = sequence_gen
    @start_time = Time.now
    parse_user_input(input)
  end

  def sequence_gen
    colors = %w{R G B Y}
    4.times.map do |color|
      colors.sample
    end.join
  end

  def colorize(submitted)
    submitted.chars.map do |char|
      COLORS.fetch(char)
    end.join
  end

  def parse_user_input(input)
    options = Hash.new(:bad_input)
    options['P']= :game_flow
    options['I']= :instructions
    self.send(options[input[0]])
  end

  def game_flow
    @guess_count = 0
    start
    gameplay
    replay
  end

  def gameplay
    loop do
      guess = user_input
      @guess_count += 1
      if guess[0] == 'C'
        @guess_count -= 1
        cheat(colorize(sequence))
      elsif guess.length != 4
        invalid_length(guess)
      elsif guess == sequence
        win_stats(colorize(guess))
        break
      else
        guess_feedback(guess)
      end
    end
  end

  def invalid_length(guess)
    if guess.length > 4
      too_long
    elsif guess.length < 4
      too_short
    end
  end

end

if __FILE__ == $0

Mastermind.new

end
